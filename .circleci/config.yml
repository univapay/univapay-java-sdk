version: 2.1

executors:
  java8:
    docker:
      - image: circleci/openjdk:8-jdk
orbs:
  gradle: circleci/gradle@2.0.1


jobs:
  spotless:
    executor: java8
    steps:
     - checkout
     - run:
         command: ./gradlew spotlessCheck
         name: Spotless Check
  publish:
    executor: java8
    steps:
     - checkout
     - run:
         command: |
           export GPG_KEY_FILE=`mktemp`
           echo "export GPG_KEY=$GPG_KEY_FILE" >> $BASH_ENV
         name: Prepare GPG keystore file
     - run:
         command: echo $SECRING_GPG_ASC_BASE64 | base64 --decode > $GPG_KEY
         name: Base64 decode gpg keystore to file
     - run:
         command: gpg --batch --import $GPG_KEY
         name: Import GPG keys
     - run:
         command: |
            echo "use-agent" >> ~/.gnupg/gpg.conf
            echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
            echo RELOADAGENT | gpg-connect-agent
            echo "TEST" > test.file
            echo $GPG_PASSPHRASE | gpg --batch --pinentry-mode=loopback --passphrase-fd 0 --output test.signed --yes --sign test.file
            rm test.signed
            rm test.file
         name: Set GPG flags
     - run:
         command: |
           mkdir secrets
           cd secrets
           gpg --output public.gpg --armor export payments-dev@univapay.com
           echo $GPG_PASSPHRASE | gpg --output private.gpg --armor --export-secret-key --pinentry-mode=loopback --passphrase-fd 0
           cd ..
     - run:
         command: |
           export JRELEASER_MAVENCENTRAL_PASSWORD=$CENTRAL_PASSWORD
           export JRELEASER_MAVENCENTRAL_USERNAME=$CENTRAL_USER
           export JRELEASER_GPG_PASSPHRASE=$GPG_PASSPHRASE
           export JRELEASER_GITHUB_TOKEN=NOT-REQUIRED
           ./gradlew jreleaserConfig 
           ./gradlew clean 
           ./gradlew publish -x test --stacktrace
           ./gradlew jreleaserDeploy
         name: Deploy artifacts
     - run:
         command: echo RELOADAGENT | gpg-connect-agent
         name: Reset GPG

workflows:
  checkout-build-test:
    jobs:
      - spotless:
          filters:  # required since `publish` has tag filters AND requires `spotless`
            tags:
              only: /.*/
      - gradle/test:
          executor: java8
          filters:  # required since `publish` has tag filters AND requires `gradle/test`
            tags:
              only: /.*/
      - publish:
          requires:
            - spotless
            - gradle/test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
