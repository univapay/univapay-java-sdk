import com.diffplug.spotless.LineEnding

/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id "com.github.ben-manes.versions" version "0.51.0"
    id "com.diffplug.spotless" version "6.12.1"
    id "io.freefair.lombok" version "8.11"
}


repositories {
    mavenCentral()
}

dependencies {
    api 'io.reactivex.rxjava3:rxjava:3.1.9'
    api 'com.squareup.okhttp3:okhttp:4.12.0'
    api 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    api 'com.squareup.retrofit2:retrofit:2.11.0'
    api 'com.squareup.retrofit2:converter-gson:2.11.0'
    api 'org.joda:joda-money:1.0.4'
    api 'org.json:json:20240303'
    api 'com.google.code.gson:gson:2.11.0'
    api 'com.google.code.findbugs:jsr305:3.0.2'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.contrib:junit-theories:5.0-alpha-3'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.35.2'
    testImplementation 'com.github.stefanbirkner:system-rules:1.19.0'
    testImplementation 'org.slf4j:slf4j-simple:2.0.16'
    testImplementation 'com.google.guava:guava:33.3.1-jre'
    testImplementation 'org.mockito:mockito-core:4.11.0'
    testImplementation 'com.google.zxing:core:3.5.3'
    testImplementation 'com.google.zxing:javase:3.5.3'
}

group = 'com.univapay'
version = '0.2.34'
sourceCompatibility = '1.8'

java {
    withSourcesJar()
    withJavadocJar()
}

spotless {
    lineEndings = LineEnding.UNIX
    java {
        googleJavaFormat("1.7")
    }
}



publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = "Univapay Java SDK"
                description = 'Official Univapay Java SDK'
                url = 'https://github.com/univapay/univapay-java-sdk'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'univapaycast-dev'
                        name = 'payments-dev@univapay.com'
                        email = 'payments-dev@univapay.com'
                        organization = 'Univa Paycast'
                        organizationUrl = 'https://github.com/univapay'
                        roles = ['owner', 'developer']
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/univapay/univapay-java-sdk.git'
                    developerConnection = 'scm:git:ssh://github.com/univapay/univapay-java-sdk.git'
                    url = 'http://github.com/univapay/univapay-java-sdk.git'
                }

                issueManagement {
                    system = 'GitHub Issues'
                    url = 'http://github.com/univapay/univapay-java-sdk/issues'
                }
            }

            repositories {

                maven {
                    def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                    def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

                    credentials {
                        username = System.getenv('JIRA_USER_NAME')
                        password = System.getenv('JIRA_PASSWORD')
                    }
                }


            }
        }
    }
}

signing {
    useGpgCmd()

    sign publishing.publications.mavenJava
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// This attempt to make sure every developer has the pre-commit installed
task installGitHooks(type: Copy) {
    from new File(rootProject.rootDir, 'pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
}
build.dependsOn installGitHooks
// -- //

