import com.diffplug.spotless.LineEnding

/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'org.jreleaser' version '1.19.0'
    id "com.github.ben-manes.versions" version "0.52.0"
    id "com.diffplug.spotless" version "7.0.4"
    id "io.freefair.lombok" version "8.14"
}


repositories {
    mavenCentral()
}

dependencies {
    api 'io.reactivex.rxjava3:rxjava:3.1.10'
    api 'com.squareup.okhttp3:okhttp:5.0.0'
    api 'com.squareup.okhttp3:logging-interceptor:5.0.0'
    api 'com.squareup.retrofit2:retrofit:3.0.0'
    api 'com.squareup.retrofit2:converter-gson:3.0.0'
    api 'org.joda:joda-money:1.0.6'
    api 'org.json:json:20250517'
    api 'com.google.code.gson:gson:2.13.1'
    api 'com.google.code.findbugs:jsr305:3.0.2'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.contrib:junit-theories:5.0-alpha-3'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.35.2'
    testImplementation 'com.github.stefanbirkner:system-rules:1.19.0'
    testImplementation 'org.slf4j:slf4j-simple:2.0.17'
    testImplementation 'com.google.guava:guava:33.4.8-jre'
    testImplementation 'org.mockito:mockito-core:4.11.0'
    testImplementation 'com.google.zxing:core:3.5.3'
    testImplementation 'com.google.zxing:javase:3.5.3'
}

group = 'com.univapay'
version = '0.2.45'

java {

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withSourcesJar()
    withJavadocJar()
}

spotless {
    lineEndings = LineEnding.UNIX
    java {
        googleJavaFormat("1.7")
    }
}



publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = "Univapay Java SDK"
                description = 'Official Univapay Java SDK'
                url = 'https://github.com/univapay/univapay-java-sdk'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'univapaycast-dev'
                        name = 'payments-dev@univapay.com'
                        email = 'payments-dev@univapay.com'
                        organization = 'Univa Paycast'
                        organizationUrl = 'https://github.com/univapay'
                        roles = ['owner', 'developer']
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/univapay/univapay-java-sdk.git'
                    developerConnection = 'scm:git:ssh://github.com/univapay/univapay-java-sdk.git'
                    url = 'http://github.com/univapay/univapay-java-sdk.git'
                }

                issueManagement {
                    system = 'GitHub Issues'
                    url = 'http://github.com/univapay/univapay-java-sdk/issues'
                }
            }

            repositories {
                maven {
                    url = layout.buildDirectory.dir('staging-deploy')
                }
            }

        }
    }
}
jreleaser {
    signing {
        active = 'ALWAYS'
        armored = true
        mode = 'FILE'
        publicKey = 'secrets/public.gpg'
        secretKey = 'secrets/private.gpg'
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                    stage = "UPLOAD"
                }

            }

        }
    }
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// This attempt to make sure every developer has the pre-commit installed
task installGitHooks(type: Copy) {
    from new File(rootProject.rootDir, 'pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
}
build.dependsOn installGitHooks
// -- //

